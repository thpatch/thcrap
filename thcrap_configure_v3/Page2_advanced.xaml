<UserControl x:Class="thcrap_configure_v3.Page2_advanced"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
      xmlns:local="clr-namespace:thcrap_configure_v3"
      mc:Ignorable="d"
      d:DesignHeight="450" d:DesignWidth="800">

    <UserControl.Resources>
        <!-- Define the reusable HoverVisibleButtonStyle -->
        <Style x:Key="HoverVisibleButtonStyle" TargetType="Button">
            <Setter Property="Visibility" Value="Hidden" />
            <Setter Property="VerticalAlignment" Value="Stretch" />
            <Setter Property="Padding" Value="2 0" />
            <Style.Triggers>
                <!-- Trigger to show Button when the parent StackPanel is hovered -->
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource AncestorType=Grid}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
                <!-- Trigger to show the Button when the Button itself is hovered -->
                <DataTrigger Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True">
                    <Setter Property="Visibility" Value="Visible" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>


    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="auto" />
        </Grid.ColumnDefinitions>
        <DockPanel Grid.Column="0">
            <DockPanel DockPanel.Dock="Top">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Name="QuickFilterTextBox"
                        Grid.Column="0"
                        Margin="0"
                        VerticalAlignment="Stretch"
                        HorizontalAlignment="Stretch"
                        Padding="0"
                        BorderThickness="1,1,0,1"
                        TextChanged="QuickFilterChanged" />

                    <TextBlock
                        Name="Placeholder"
                        Text="Search hereâ€¦"
                        Grid.Column="0"
                        Margin="5,1,0,0"
                        IsHitTestVisible="False"
                        FontStyle="Italic"
                        Foreground="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>

                    <Button Name="SearchButton"
                            Grid.Column="1"
                            Width="20"
                            Height="{Binding RelativeSource={RelativeSource Mode=FindAncestor,
                                AncestorType={x:Type Grid}},
                                Path=ActualHeight}"
                            Background="Transparent"
                            BorderThickness="0,1,1,1"
                            Padding="0"
                            Margin="0"
                            VerticalAlignment="Stretch"
                            Click="SearchButton_OnClick">
                        ðŸ”Ž
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
                                <Style.Triggers>
                                    <!-- Trigger to watch the TextBox's IsKeyboardFocusWithin state -->
                                    <DataTrigger Binding="{Binding IsKeyboardFocusWithin, ElementName=QuickFilterTextBox}" Value="True">
                                        <!-- I have no idea which SystemColor is correct, most of them seem to be a different blue -->
                                        <Setter Property="BorderBrush" Value="DodgerBlue"
                                        />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </DockPanel>
            <TreeView x:Name="AvailablePatches" MouseDoubleClick="AvailablePatchDoubleClick"  Margin="0,7,0,0">
                <TreeView.Resources>
                    <Style TargetType="TreeViewItem">
                        <Setter Property="IsExpanded" Value="True" />
                        <Setter Property="Visibility" Value="{Binding VisibilityInTree}" />
                    </Style>
                    <HierarchicalDataTemplate DataType="{x:Type local:Page2_advanced+Repo}" ItemsSource="{Binding Patches}">
                        <HierarchicalDataTemplate.ItemContainerStyle>
                            <Style TargetType="TreeViewItem">
                                <Setter Property="Visibility" Value="{Binding VisibilityInTree}" />
                            </Style>
                        </HierarchicalDataTemplate.ItemContainerStyle>
                        <TextBlock>
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0} ({1})">
                                    <Binding Path="SourceRepo.Title" />
                                    <Binding Path="SourceRepo.Id" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                    </HierarchicalDataTemplate>
                    <HierarchicalDataTemplate DataType="{x:Type local:Page2_advanced+RepoPatch}">
                        <Grid Background="Transparent">
                            <!--Setting the background to transparent, makes the whole area of the grid hit-test,
                             not just the visible elements -->

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Grid.ColumnSpan="2">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} ({1})">
                                        <Binding Path="SourcePatch.Title" />
                                        <Binding Path="SourcePatch.Id" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <!-- In a Grid later defined elements are on the top -->
                            <Button
                                Grid.Column="0"
                                Margin="0"
                                Click="AvailablePatchesMoveRight"
                                Tag="{Binding}"
                                Style="{StaticResource HoverVisibleButtonStyle}">
                                    <Image Source="/img/arrow_right.png" Margin="4" Height="10"/>
                            </Button>
                        </Grid>
                    </HierarchicalDataTemplate>
                </TreeView.Resources>
            </TreeView>
        </DockPanel>
        <StackPanel Grid.Column="1" VerticalAlignment="Center" Margin="12,0">
            <Button Margin="0,0,0,12" Click="AvailablePatchesMoveRight">
                <Image Source="/img/arrow_right.png" Margin="4" Height="10"/>
            </Button>
            <Button Click="SelectedPatchesMoveLeft">
                <Image Source="/img/arrow_left.png" Margin="4" Height="10" />
            </Button>
        </StackPanel>
        <DockPanel Grid.Column="2">
            <DockPanel DockPanel.Dock="Bottom">
                <TextBlock Text="Config name: " />
                <TextBox x:Name="ConfigName" TextChanged="ConfigNameChanged"/>
            </DockPanel>
            <ListBox x:Name="SelectedPatches" Margin="0,0,0,7">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <EventSetter Event="MouseDoubleClick" Handler="SelectedPatch_DoubleClick" />
                        <EventSetter Event="KeyUp" Handler="SelectedPatch_KeyUp" />
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Background="Transparent">

                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <TextBlock
                                Grid.Column="0"
                                Grid.ColumnSpan="4">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0} ({1}/{2})">
                                        <Binding Path="SourcePatch.Title" />
                                        <Binding Path="SourcePatch.Repo.Id" />
                                        <Binding Path="SourcePatch.Id" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>


                            <Button Click="SelectedPatchesMoveLeft"
                                    Grid.Column="0"
                                    Tag="{Binding}"
                                    Margin="0"
                                    Style="{StaticResource HoverVisibleButtonStyle}">
                                <Image Source="/img/arrow_left.png" Margin="4" Height="10" />
                            </Button>
                            <Button Click="SelectedPatch_MoveUp"
                                    Grid.Column="1"
                                    Tag="{Binding}"
                                    Margin="5,0"
                                    Style="{StaticResource HoverVisibleButtonStyle}">
                                <Image Source="/img/arrow_up.png" Margin="4" Height="10" />
                            </Button>
                            <Button Click="SelectedPatch_MoveDown"
                                    Grid.Column="2"
                                    Tag="{Binding}"
                                    Margin="0,0, 5, 0"
                                    Style="{StaticResource HoverVisibleButtonStyle}">
                                <Image Source="/img/arrow_down.png" Margin="4" Height="10" />
                            </Button>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>
        <StackPanel Grid.Column="3" VerticalAlignment="Center" Margin="12,0,0,0">
            <Button Click="SelectedPatch_MoveUp" Margin="0,0,0,12">
                <Image Source="/img/arrow_up.png" Margin="4" Height="10" />
            </Button>
            <Button Click="SelectedPatch_MoveDown">
                <Image Source="/img/arrow_down.png" Margin="4" Height="10" />
            </Button>
        </StackPanel>
        <Button Click="SelectedPatch_Help" Content="?" Grid.Column="3" VerticalAlignment="Top" HorizontalAlignment="Right" Height="22" Width="22" />
    </Grid>
</UserControl>
